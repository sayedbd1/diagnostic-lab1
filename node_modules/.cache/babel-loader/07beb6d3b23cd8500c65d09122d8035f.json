{"ast":null,"code":"import _slicedToArray from\"C:/projects/diagnostic-lab/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{getAuth,signInWithPopup,GoogleAuthProvider,signOut,onAuthStateChanged,createUserWithEmailAndPassword,signInWithEmailAndPassword}from\"firebase/auth\";import{useEffect,useState}from\"react\";import initializeAuthentication from\"../components/Login/Firebase/firebase.init\";initializeAuthentication();var useFirebase=function useFirebase(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setLoading=_useState4[1];var auth=getAuth();var signInUsingGoogle=function signInUsingGoogle(){var googleProvider=new GoogleAuthProvider();return signInWithPopup(auth,googleProvider);//  .finally(() => setLoading(false));\n};//observe user state change\nuseEffect(function(){var unsubscribed=onAuthStateChanged(auth,function(user){if(user){setUser(user);}else{setUser({});}setLoading(false);});return function(){return unsubscribed;};},[]);var passwordSignUp=function passwordSignUp(email,password){createUserWithEmailAndPassword(auth,email,password).then(function(userCredential){// Signed in \nvar user=userCredential.user;setUser(user);}).catch(function(error){var errorCode=error.code;var errorMessage=error.message;});};var passwordSignIn=function passwordSignIn(email,password){signInWithEmailAndPassword(auth,email,password).then(function(userCredential){// Signed in \nvar user=userCredential.user;setUser(user);}).catch(function(error){var errorCode=error.code;var errorMessage=error.message;});};var logOut=function logOut(){setLoading(true);signOut(auth).then(function(){}).finally(function(){return setLoading(false);});};return{user:user,isLoading:isLoading,signInUsingGoogle:signInUsingGoogle,passwordSignIn:passwordSignIn,passwordSignUp:passwordSignUp,logOut:logOut};};export default useFirebase;","map":{"version":3,"sources":["C:/projects/diagnostic-lab/src/hooks/useFirebase.js"],"names":["getAuth","signInWithPopup","GoogleAuthProvider","signOut","onAuthStateChanged","createUserWithEmailAndPassword","signInWithEmailAndPassword","useEffect","useState","initializeAuthentication","useFirebase","user","setUser","isLoading","setLoading","auth","signInUsingGoogle","googleProvider","unsubscribed","passwordSignUp","email","password","then","userCredential","catch","error","errorCode","code","errorMessage","message","passwordSignIn","logOut","finally"],"mappings":"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","sourcesContent":["import { getAuth, signInWithPopup, GoogleAuthProvider, signOut, onAuthStateChanged, createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { useEffect, useState } from \"react\";\r\nimport initializeAuthentication from \"../components/Login/Firebase/firebase.init\";\r\n\r\ninitializeAuthentication();\r\nconst useFirebase = () => {\r\n    const [user, setUser] = useState({});\r\n    const [isLoading, setLoading] = useState(true);\r\n    const auth = getAuth();\r\n    const signInUsingGoogle = () => {\r\n        const googleProvider = new GoogleAuthProvider();\r\n       return signInWithPopup(auth, googleProvider);\r\n       \r\n        //  .finally(() => setLoading(false));\r\n    }\r\n\r\n    //observe user state change\r\n    useEffect(() => {\r\n       const unsubscribed = onAuthStateChanged(auth, user =>{\r\n           if(user){\r\n               setUser(user);\r\n           }\r\n           else{\r\n               setUser({})\r\n           }\r\n           setLoading(false);\r\n        });\r\n        return () => unsubscribed;\r\n    }, [])\r\n\r\n    const passwordSignUp = (email,password)=>{\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n  .then((userCredential) => {\r\n    // Signed in \r\n    const user = userCredential.user;\r\n    setUser(user);\r\n  })\r\n  .catch((error) => {\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n  });\r\n    }\r\n    const passwordSignIn = (email, password)=>{\r\n        signInWithEmailAndPassword(auth, email, password)\r\n  .then((userCredential) => {\r\n    // Signed in \r\n    const user = userCredential.user;\r\n   setUser(user)\r\n  })\r\n  .catch((error) => {\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n  });\r\n    }\r\n\r\n    const logOut = () => {\r\n        setLoading(true);\r\n        signOut(auth)\r\n        .then(() => { })\r\n        .finally(() => setLoading(false)); \r\n    }\r\n    return{\r\n        user,\r\n        isLoading,\r\n        signInUsingGoogle,\r\n        passwordSignIn,\r\n        passwordSignUp,\r\n        logOut\r\n    }\r\n}\r\nexport default useFirebase;\r\n"]},"metadata":{},"sourceType":"module"}